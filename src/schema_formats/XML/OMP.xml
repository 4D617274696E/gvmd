<!--
OpenVAS Manager
$Id$
Description: OMP schema with embedded documentation, in OMP.

Authors:
Matthew Mundell <matthew.mundell@greenbone.de>

Copyright:
Copyright (C) 2010 Greenbone Networks GmbH

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License version 2,
or, at your option, any later version as published by the Free
Software Foundation

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
-->

<protocol>
  <name>OpenVAS Management Protocol</name>
  <abbreviation>OMP</abbreviation>
  <summary>The "management" protocol of the Open Vulnerability Assessment System</summary>
  <version>1.0</version>
  <type>
    <name>base64</name>
    <summary>Base64 encoded data</summary>
    <pattern>xsd:base64Binary</pattern>
  </type>
  <type>
    <name>boolean</name>
    <summary>A true of false value</summary>
    <description>
      Zero is false, anything else is true.  As a result, the empty string is
      considered true.
    </description>
    <pattern>text</pattern>
  </type>
  <type>
    <name>boolean_atoi</name>
    <summary>A true of false value, after conversion to an integer</summary>
    <description>
      Zero is false, anything else is true.  The value is first converted to
      an integer, as by the C `atoi' routine.  This means that an empty string
      is considered false.
    </description>
    <pattern>text</pattern>
  </type>
  <type>
    <name>ctime</name>
    <summary>A date and time, in the C `ctime' format</summary>
    <description>
      An example string in this format is "Wed Jun 30 21:49:08 1993\n".
    </description>
    <pattern>text</pattern>
  </type>
  <type>
    <name>integer</name>
    <summary>An integer</summary>
    <pattern>xsd:integer</pattern>
  </type>
  <type>
    <name>name</name>
    <summary>A name</summary>
    <description>
      Typically this is the name of one of the manager resources, like a
      task or target.
    </description>
    <pattern>xsd:string</pattern>
  </type>
  <type>
    <name>oid</name>
    <summary>An Object Identifier (OID).</summary>
    <pattern>xsd:token { pattern = "[0-9\.]{1,80}" }</pattern>
  </type>
  <type>
    <name>sort_order</name>
    <summary>A string describing an order for sorting</summary>
    <description>
      The string "descending" denotes descending order, anything else means
      ascending.
    </description>
    <pattern>text</pattern>
  </type>
  <type>
    <name>status</name>
    <summary>The success or failure status of a command</summary>
    <pattern>xsd:token { pattern = "200|201|202|400|401|403|404|409|500|503" }</pattern>
  </type>
  <type>
    <name>threat</name>
    <summary>A threat level</summary>
    <pattern>xsd:token { pattern = "High|Medium|Low|Log|Debug" }</pattern>
  </type>
  <type>
    <name>time_unit</name>
    <summary>A unit of time</summary>
    <pattern>xsd:token { pattern = "second|minute|hour|day|week|month|year|decade" }</pattern>
  </type>
  <type>
    <name>uuid</name>
    <summary>A Universally Unique Identifier (UUID)</summary>
    <pattern>xsd:token { pattern = "[0-9abcdefABCDEF\-]{1,40}" }</pattern>
  </type>
  <command>
    <name>authenticate</name>
    <summary>Authenticate with the manager</summary>
    <description>
      <p>
        The client uses the authenticate command to authenticate with the
        Manager.
      </p>
      <p>
        The client normally executes this command at the beginning of each
        connection.  The only commands permitted before authentication are
        get_version and commands.
      </p>
    </description>
    <pattern>
      <e>credentials</e>
    </pattern>
    <ele>
      <name>credentials</name>
      <pattern>
        <e>username</e>
        <e>password</e>
      </pattern>
      <ele>
        <name>username</name>
        <summary>The login name of the user</summary>
        <pattern>
          text
        </pattern>
      </ele>
      <ele>
        <name>password</name>
        <summary>The user's password</summary>
        <pattern>
          text
        </pattern>
      </ele>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Authenticate with a good password</summary>
      <request>
        <authenticate>
          <credentials>
            <username>sally</username>
            <password>secret</password>
          </credentials>
        </authenticate>
      </request>
      <response>
        <authenticate_response status="200" status_text="OK"/>
      </response>
    </example>
    <example>
      <summary>Authenticate with a bad password</summary>
      <request>
        <authenticate>
          <credentials>
            <username>sally</username>
            <password>secrte</password>
          </credentials>
        </authenticate>
      </request>
      <response>
        <authenticate_response status="400"
                               status_text="Authentication failed"/>
      </response>
    </example>
  </command>
  <command>
    <name>commands</name>
    <summary>Run a list of commands</summary>
    <description>
      The client uses the commands command to run a list of commands.  The
      elements are executed as OMP commands in the given sequence.  The reply
      contains the result of each command, in the same order as the given
      commands.
    </description>
    <pattern><any><c>command</c></any></pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <any><c>response</c></any>
      </pattern>
    </response>
  </command>
  <command>
    <name>create_agent</name>
    <summary>Create an agent</summary>
    <description>
      <p>
        The client uses the create_agent command to create a new agent.
      </p>
    </description>
    <pattern>
      <e>installer</e>
      <e>name</e>
      <o><e>comment</e></o>
      <o><e>howto_install</e></o>
      <o><e>howto_use</e></o>
    </pattern>
    <ele>
      <name>installer</name>
      <summary>A file that installs the agent on a target machine</summary>
      <pattern>
        <t>base64</t>
        <e>signature</e>
      </pattern>
      <ele>
        <name>signature</name>
        <summary>A detached OpenPGP signature of the installer</summary>
        <pattern><t>base64</t></pattern>
      </ele>
    </ele>
    <ele>
      <name>name</name>
      <summary>A name for the installer</summary>
      <pattern><t>name</t></pattern>
    </ele>
    <ele>
      <name>comment</name>
      <summary>A comment on the agent</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>howto_install</name>
      <summary>A file that describes how to install the agent</summary>
      <pattern>
        <t>base64</t>
      </pattern>
    </ele>
    <ele>
      <name>howto_use</name>
      <summary>A file that describes how to use the agent</summary>
      <pattern>
        <t>base64</t>
      </pattern>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Create an agent</summary>
      <request>
        <create_agent>
          <installer>
            asdf3235saf3kjBVF...
            <signature>iEYEABECAAYFA...</signature>
          </installer>
          <name>SLAD</name>
        </create_agent>
      </request>
      <response>
        <create_agent_response status="201" status_text="OK, resource created"
                               id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
        </create_agent_response>
      </response>
    </example>
  </command>
  <command>
    <name>create_config</name>
    <summary>Create a config</summary>
    <description>
      <p>
        The client uses the create_config command to create a new config.
      </p>
      <l>
        <lh>This command can be called in three ways:</lh>
        <li>
          With a copy element.  The new config is a copy of the existing
          config, with the given name.
        </li>
        <li>
          With an embedded get_configs response element.  The config is
          created as defined by the get_configs response element.  Name is
          actually optional in this case.  The config is given the name of
          the config in the get_configs response.  If there is already a
          config with this name, then a number is attached to the name to
          make it unique.
        </li>
        <li>
          With an rcfile element. The config is created as described in
          the RC file.  In this case a name element is required.  The new
          config is given this name.
        </li>
      </l>
    </description>
    <pattern>
      <o><e>comment</e></o>
      <or>
        <e>copy</e>
        <r>get_configs</r>
        <e>rcfile</e>
      </or>
      <e>name</e>
    </pattern>
    <ele>
      <name>comment</name>
      <summary>A comment on the config</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>copy</name>
      <!-- TODO UUIDs are normally in attributes. -->
      <summary>The UUID of an existing config</summary>
      <pattern>
        <t>uuid</t>
      </pattern>
    </ele>
    <ele>
      <name>rcfile</name>
      <summary>A openvasrc style file that defines the config</summary>
      <pattern>
        <t>base64</t>
      </pattern>
    </ele>
    <ele>
      <name>name</name>
      <summary>A name for the config</summary>
      <pattern><t>name</t></pattern>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Copy a config</summary>
      <request>
        <create_config>
          <copy>daba56c8-73ec-11df-a475-002264764cea</copy>
          <name>Full</name>
        </create_config>
      </request>
      <response>
        <create_config_response status="201" status_text="OK, resource created"
                                id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
        </create_config_response>
      </response>
    </example>
    <example>
      <summary>Create a config from an RC file</summary>
      <request>
        <create_config>
          <rcfile>asdf3235saf3kjBVF...</rcfile>
          <name>Full</name>
        </create_config>
      </request>
      <response>
        <create_config_response status="201" status_text="OK, resource created"
                                id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
        </create_config_response>
      </response>
    </example>
    <example>
      <summary>Create a config from a GET_CONFIGS response</summary>
      <request>
        <create_config>
          <get_configs_response>
            <config id="daba56c8-73ec-11df-a475-002264764cea">
              <name>Full and fast</name>
              <truncated>...</truncated>
            </config>
          </get_configs_response>
        </create_config>
      </request>
      <response>
        <create_config_response status="201" status_text="OK, resource created"
                                id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
        </create_config_response>
      </response>
    </example>
  </command>
  <command>
    <name>create_escalator</name>
    <summary>Create an escalator</summary>
    <description>
      <p>
        The client uses the create_escalator command to create a new
        escalator.
      </p>
    </description>
    <pattern>
      <e>name</e>
      <o><e>comment</e></o>
      <e>condition</e>
      <e>event</e>
      <e>method</e>
    </pattern>
    <ele>
      <name>name</name>
      <summary>A name for the escalator</summary>
      <pattern><t>name</t></pattern>
    </ele>
    <ele>
      <name>comment</name>
      <summary>A comment on the escalator</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>condition</name>
      <summary>The condition that must be satisfied for escalation</summary>
      <pattern>
        text
        <any><e>data</e></any>
      </pattern>
      <ele>
        <name>data</name>
        <summary>Some data that defines the condition</summary>
        <pattern>
          text
          <e>name</e>
        </pattern>
        <ele>
          <name>name</name>
          <summary>The name of the condition data</summary>
          <pattern>
            text
          </pattern>
        </ele>
      </ele>
    </ele>
    <ele>
      <name>event</name>
      <summary>The event that must happen for escalation</summary>
      <pattern>
        text
        <any><e>data</e></any>
      </pattern>
      <ele>
        <name>data</name>
        <summary>Some data that defines the event</summary>
        <pattern>
          text
          <e>name</e>
        </pattern>
        <ele>
          <name>name</name>
          <summary>The name of the event data</summary>
          <pattern>
            text
          </pattern>
        </ele>
      </ele>
    </ele>
    <ele>
      <name>method</name>
      <summary>The method by which escalation must occur</summary>
      <pattern>
        text
        <any><e>data</e></any>
      </pattern>
      <ele>
        <name>data</name>
        <summary>Some data that defines the method</summary>
        <pattern>
          text
          <e>name</e>
        </pattern>
        <ele>
          <name>name</name>
          <summary>The name of the method data</summary>
          <pattern>
            text
          </pattern>
        </ele>
      </ele>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Create an escalator</summary>
      <request>
        <create_escalator>
          <name>emergency</name>
          <condition>
            Threat level at least
            <data>
              <name>level</name>
              High
            </data>
          </condition>
          <event>
            Task run status changed
            <data>
              <name>status</name>
              Done
            </data>
          </event>
          <method>
            Email
            <data>
              <name>to_address</name>
              sally@example.org
            </data>
            <data>
              <name>from_address</name>
              bob@example.org
            </data>
          </method>
        </create_escalator>
      </request>
      <response>
        <create_escalator_response status="201"
                                   status_text="OK, resource created"
                                   id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
        </create_escalator_response>
      </response>
    </example>
  </command>
  <command>
    <name>create_lsc_credential</name>
    <summary>Create an LSC credential</summary>
    <description>
      <p>
        The client uses the create_lsc_credential command to create a new
        LSC credential.
      </p>
      <p>
        If the command includes a password, then the manager creates a
        password only credential, otherwise the manager creates a key-based
        credential.
      </p>
    </description>
    <pattern>
      <e>name</e>
      <o><e>comment</e></o>
      <e>login</e>
      <o><e>password</e></o>
    </pattern>
    <ele>
      <name>name</name>
      <summary>A name for the LSC credential</summary>
      <pattern><t>name</t></pattern>
    </ele>
    <ele>
      <name>comment</name>
      <summary>A comment on the LSC credential</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>login</name>
      <summary>The user name of the credential</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>password</name>
      <summary>The password for the credential login</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Create an LSC credential</summary>
      <request>
        <create_lsc_credential>
          <name>cluster sally</name>
          <login>sally</login>
          <password>secret</password>
          <comment>Sally's login to the cluster.</comment>
        </create_lsc_credential>
      </request>
      <response>
        <create_lsc_credential_response status="201"
                                        status_text="OK, resource created"
                                        id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
        </create_lsc_credential_response>
      </response>
    </example>
  </command>
  <command>
    <name>create_note</name>
    <summary>Create a note</summary>
    <description>
      <p>
        The client uses the create_note command to create a new note.
      </p>
    </description>
    <pattern>
      <e>text</e>
      <e>nvt</e>
      <o><e>comment</e></o>
      <o><e>hosts</e></o>
      <o><e>port</e></o>
      <o><e>result</e></o>
      <o><e>task</e></o>
      <o><e>threat</e></o>
    </pattern>
    <ele>
      <name>text</name>
      <summary>The text of the note</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>nvt</name>
      <summary>NVT to which note applies</summary>
      <pattern>
        <attrib>
          <name>oid</name>
          <type>oid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>comment</name>
      <summary>A comment on the note</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>hosts</name>
      <summary>A textual list of hosts</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>port</name>
      <summary>Port to which note applies</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>result</name>
      <summary>Result to which note applies</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>task</name>
      <summary>Task to which note applies</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>threat</name>
      <summary>Threat level to which note applies</summary>
      <pattern>
        <t>threat</t>
      </pattern>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Create a note</summary>
      <request>
        <create_note>
          <text>This issue should be resolved after the upgrade.</text>
          <nvt>1.3.6.1.4.1.25623.1.0.10330</nvt>
          <result>254cd3ef-bbe1-4d58-859d-21b8d0c046c6</result>
        </create_note>
      </request>
      <response>
        <create_note_response status="202"
                              status_text="OK, resource created"
                              id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
        </create_note_response>
      </response>
    </example>
  </command>
  <command>
    <name>create_override</name>
    <summary>Create an override</summary>
    <description>
      <p>
        The client uses the create_override command to create a new override.
      </p>
    </description>
    <pattern>
      <e>text</e>
      <e>nvt</e>
      <o><e>comment</e></o>
      <o><e>hosts</e></o>
      <o><e>new_threat</e></o>
      <o><e>port</e></o>
      <o><e>result</e></o>
      <o><e>task</e></o>
      <o><e>threat</e></o>
    </pattern>
    <ele>
      <name>text</name>
      <summary>The text of the override</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>nvt</name>
      <summary>NVT to which override applies</summary>
      <pattern>
        <attrib>
          <name>oid</name>
          <type>oid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>comment</name>
      <summary>A comment on the override</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>hosts</name>
      <summary>A textual list of hosts</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>new_threat</name>
      <summary>New threat level for result</summary>
      <pattern>
        <t>threat</t>
      </pattern>
    </ele>
    <ele>
      <name>port</name>
      <summary>Port to which override applies</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>result</name>
      <summary>Result to which override applies</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>task</name>
      <summary>Task to which override applies</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>threat</name>
      <summary>Threat level to which override applies</summary>
      <pattern>
        <t>threat</t>
      </pattern>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Create an override</summary>
      <request>
        <create_override>
          <text>This is actually of little concern.</text>
          <nvt>1.3.6.1.4.1.25623.1.0.10330</nvt>
          <new_threat>Low</new_threat>
          <result>254cd3ef-bbe1-4d58-859d-21b8d0c046c6</result>
        </create_override>
      </request>
      <response>
        <create_override_response status="201"
                                   status_text="OK, resource created"
                                   id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
        </create_override_response>
      </response>
    </example>
  </command>
  <command>
    <name>create_schedule</name>
    <summary>Create a schedule</summary>
    <description>
      <p>
        The client uses the create_schedule command to create a new schedule.
      </p>
    </description>
    <pattern>
      <e>name</e>
      <o><e>comment</e></o>
      <e>first_time</e>
      <e>duration</e>
      <e>period</e>
    </pattern>
    <ele>
      <name>name</name>
      <summary>A name for the schedule</summary>
      <pattern><t>name</t></pattern>
    </ele>
    <ele>
      <name>comment</name>
      <summary>A comment on the schedule</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>first_time</name>
      <summary>The first time the schedule will run</summary>
      <pattern>
        <e>minute</e>
        <e>hour</e>
        <e>day_of_month</e>
        <e>month</e>
        <e>year</e>
      </pattern>
      <ele>
        <name>minute</name>
        <pattern><t>integer</t></pattern>
      </ele>
      <ele>
        <name>hour</name>
        <pattern><t>integer</t></pattern>
      </ele>
      <ele>
        <name>day_of_month</name>
        <pattern><t>integer</t></pattern>
      </ele>
      <ele>
        <name>month</name>
        <pattern><t>integer</t></pattern>
      </ele>
      <ele>
        <name>year</name>
        <pattern><t>integer</t></pattern>
      </ele>
    </ele>
    <ele>
      <name>duration</name>
      <summary>How long the Manager will run the scheduled task for</summary>
      <description>A duration of 0 means to run to completion.</description>
      <pattern>
        <e>unit</e>
      </pattern>
      <ele>
        <name>unit</name>
        <summary>Duration time unit</summary>
        <pattern><t>time_unit</t></pattern>
      </ele>
    </ele>
    <ele>
      <name>period</name>
      <summary>How often the Manager will repeat the scheduled task</summary>
      <description>A period of 0 means to run once.</description>
      <pattern>
        <e>unit</e>
      </pattern>
      <ele>
        <name>unit</name>
        <summary>Period time unit</summary>
        <pattern><t>time_unit</t></pattern>
      </ele>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Create a schedule</summary>
      <request>
        <create_schedule>
          <name>Every night</name>
          <first_time>
            <day_of_month>1</day_of_month>
            <hour>0</hour>
            <minute>0</minute>
            <month>1</month>
            <year>2011</year>
          </first_time>
          <duration>
            3
            <unit>hour</unit>
          </duration>
          <period>
            1
            <unit>day</unit>
          </period>
        </create_schedule>
      </request>
      <response>
        <create_schedule_response status="201"
                                   status_text="OK, resource created"
                                   id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
        </create_schedule_response>
      </response>
    </example>
  </command>
  <command>
    <name>create_target</name>
    <summary>Create a target</summary>
    <description>
      <p>
        The client uses the create_target command to create a new target.
      </p>
      <p>
        If the list of hosts is empty, the command must also include a
        target locator.
      </p>
    </description>
    <pattern>
      <e>name</e>
      <o><e>comment</e></o>
      <e>hosts</e>
      <e>lsc_credential</e>
      <e>target_locator</e>
    </pattern>
    <ele>
      <name>name</name>
      <summary>A name for the target</summary>
      <pattern><t>name</t></pattern>
    </ele>
    <ele>
      <name>comment</name>
      <summary>A comment on the target</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>hosts</name>
      <summary>A textual list of hosts, which may be empty</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>lsc_credential</name>
      <summary>Login credentials for target</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>target_locator</name>
      <summary>Target locator (for example, for LDAP)</summary>
      <pattern>
        <o><e>username</e></o>
        <o><e>password</e></o>
      </pattern>
      <ele>
        <name>username</name>
        <summary>The login for the target locator</summary>
        <pattern>
          text
        </pattern>
      </ele>
      <ele>
        <name>password</name>
        <summary>The password for the target locator</summary>
        <pattern>
          text
        </pattern>
      </ele>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Create a target, giving a host list</summary>
      <request>
        <create_target>
          <create_target>
            <name>All GNU/Linux machines</name>
            <hosts>192.168.1.0/24</hosts>
          </create_target>
        </create_target>
      </request>
      <response>
        <create_target_response status="201"
                                status_text="OK, resource created"
                                id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
        </create_target_response>
      </response>
    </example>
  </command>
  <command>
    <name>create_task</name>
    <summary>Create a task</summary>
    <description>
      <p>
        The client uses the create_task command to create a new task.
      </p>
      <p>
        If an rcfile is given, then config and target should actually be
        left out.  This form of the command is special support for
        OpenVAS-Client, and will likely be removed in future versions.
      </p>
    </description>
    <pattern>
      <e>name</e>
      <o><e>comment</e></o>
      <e>config</e>
      <e>target</e>
      <o><e>escalator</e></o>
      <o><e>schedule</e></o>
      <o><e>rcfile</e></o>
    </pattern>
    <ele>
      <name>name</name>
      <summary>A name for the task</summary>
      <pattern><t>name</t></pattern>
    </ele>
    <ele>
      <name>comment</name>
      <summary>A comment on the task</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>config</name>
      <summary>The scan configuration used by the task</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>target</name>
      <summary>The hosts scanned by the task</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>escalator</name>
      <summary>An escalator that applies to the task</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>schedule</name>
      <summary>When the task will run</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>rcfile</name>
      <summary>An openvasrc style file defining the task</summary>
      <pattern>
        <t>base64</t>
      </pattern>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Create a task, giving a host list</summary>
      <request>
        <create_task>
          <name>Scan Webserver</name>
          <comment>Hourly scan of the webserver</comment>
          <config id="daba56c8-73ec-11df-a475-002264764cea"/>
          <target id="b493b7a8-7489-11df-a3ec-002264764cea"/>
        </create_task>
      </request>
      <response>
        <create_task_response status="201"
                              status_text="OK, resource created"
                              id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
        </create_task_response>
      </response>
    </example>
  </command>
  <command>
    <name>delete_agent</name>
    <summary>Delete an agent</summary>
    <description>
      <p>
        The client uses the delete_agent command to delete an existing agent.
      </p>
      <p>
        Since this is a destructive command, the client is advised to ask
        for confirmation from the user before sending this command to the
        Manager.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>agent_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Delete an agent</summary>
      <request>
        <delete_agent agent_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </delete_agent>
      </request>
      <response>
        <delete_agent_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>delete_config</name>
    <summary>Delete a config</summary>
    <description>
      <p>
        The client uses the delete_config command to delete an existing config.
      </p>
      <p>
        Since this is a destructive command, the client is advised to ask
        for confirmation from the user before sending this command to the
        Manager.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>config_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Delete a config</summary>
      <request>
        <delete_config config_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </delete_config>
      </request>
      <response>
        <delete_config_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>delete_escalator</name>
    <summary>Delete an escalator</summary>
    <description>
      <p>
        The client uses the delete_escalator command to delete an existing
        escalator.
      </p>
      <p>
        Since this is a destructive command, the client is advised to ask
        for confirmation from the user before sending this command to the
        Manager.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>escalator_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Delete an escalator</summary>
      <request>
        <delete_escalator escalator_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </delete_escalator>
      </request>
      <response>
        <delete_escalator_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>delete_lsc_credential</name>
    <summary>Delete an LSC credential</summary>
    <description>
      <p>
        The client uses the delete_lsc_credential command to delete an
        existing LSC credential.
      </p>
      <p>
        Since this is a destructive command, the client is advised to ask
        for confirmation from the user before sending this command to the
        Manager.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>lsc_credential_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Delete an LSC credential</summary>
      <request>
        <delete_lsc_credential lsc_credential_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </delete_lsc_credential>
      </request>
      <response>
        <delete_lsc_credential_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>delete_note</name>
    <summary>Delete a note</summary>
    <description>
      <p>
        The client uses the delete_note command to delete an existing note.
      </p>
      <p>
        Since this is a destructive command, the client is advised to ask
        for confirmation from the user before sending this command to the
        Manager.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>note_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Delete a note</summary>
      <request>
        <delete_note note_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </delete_note>
      </request>
      <response>
        <delete_note_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>delete_override</name>
    <summary>Delete a override</summary>
    <description>
      <p>
        The client uses the delete_override command to delete an existing override.
      </p>
      <p>
        Since this is a destructive command, the client is advised to ask
        for confirmation from the user before sending this command to the
        Manager.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>override_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Delete a override</summary>
      <request>
        <delete_override override_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </delete_override>
      </request>
      <response>
        <delete_override_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>delete_report</name>
    <summary>Delete a report</summary>
    <description>
      <p>
        The client uses the delete_report command to delete an existing report.
      </p>
      <p>
        Since this is a destructive command, the client is advised to ask
        for confirmation from the user before sending this command to the
        Manager.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>report_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Delete a report</summary>
      <request>
        <delete_report report_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </delete_report>
      </request>
      <response>
        <delete_report_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>delete_schedule</name>
    <summary>Delete a schedule</summary>
    <description>
      <p>
        The client uses the delete_schedule command to delete an existing schedule.
      </p>
      <p>
        Since this is a destructive command, the client is advised to ask
        for confirmation from the user before sending this command to the
        Manager.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>schedule_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Delete a schedule</summary>
      <request>
        <delete_schedule schedule_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </delete_schedule>
      </request>
      <response>
        <delete_schedule_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>delete_target</name>
    <summary>Delete a target</summary>
    <description>
      <p>
        The client uses the delete_target command to delete an existing target.
      </p>
      <p>
        Since this is a destructive command, the client is advised to ask
        for confirmation from the user before sending this command to the
        Manager.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>target_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Delete a target</summary>
      <request>
        <delete_target target_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </delete_target>
      </request>
      <response>
        <delete_target_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>delete_task</name>
    <summary>Delete a task</summary>
    <description>
      <p>
        The client uses the delete_task command to delete an existing task,
        including all reports associated with the task.
      </p>
      <p>
        Since this is a destructive command, the client is advised to ask
        for confirmation from the user before sending this command to the
        Manager.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>task_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Delete a task</summary>
      <request>
        <delete_task task_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </delete_task>
      </request>
      <response>
        <delete_task_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>get_agents</name>
    <summary>Get all agents</summary>
    <description>
      <p>
        The client uses the get_agents command to get agent information.
        If the command sent by the client was valid, the manager will
        reply with a list of agents to the client.
      </p>
      <p>
        If the request includes a format then the agents in the response
        include installer elements, otherwise they include package
        elements.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>agent_id</name>
        <summary>ID of single agent to get</summary>
        <type>uuid</type>
      </attrib>
      <attrib>
        <name>format</name>
        <type>
          <alts>
            <alt>installer</alt>
            <alt>howto_install</alt>
            <alt>howto_use</alt>
          </alts>
        </type>
      </attrib>
      <attrib>
        <name>sort_order</name>
        <type>sort_order</type>
      </attrib>
      <attrib>
        <name>sort_field</name>
        <type>text</type>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <any><e>agent</e></any>
      </pattern>
      <ele>
        <name>agent</name>
        <pattern>
          <attrib>
            <name>id</name>
            <type>uuid</type>
            <required>1</required>
          </attrib>
          <e>name</e>
          <e>comment</e>
          <e>in_use</e>
          <or>
            <e>installer</e>
            <e>package</e>
          </or>
        </pattern>
        <ele>
          <name>name</name>
          <summary>The name of the agent</summary>
          <pattern><t>name</t></pattern>
        </ele>
        <ele>
          <name>comment</name>
          <summary>The comment on the agent</summary>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>in_use</name>
          <summary>Whether the agent is in use</summary>
          <pattern>boolean</pattern>
        </ele>
        <ele>
          <name>installer</name>
          <pattern>
            <e>trust</e>
          </pattern>
          <ele>
            <name>trust</name>
            <summary>Whether signature verification succeeded</summary>
            <pattern>
              <t>
                <alts>
                  <alt>yes</alt>
                  <alt>no</alt>
                  <alt>unknown</alt>
                </alts>
              </t>
            </pattern>
          </ele>
        </ele>
        <ele>
          <name>package</name>
          <summary>Either the installer or one of the HOWTOs</summary>
          <pattern>
            <e>filename</e>
            <t>base64</t>
          </pattern>
          <ele>
            <name>filename</name>
            <summary>The filename of the package</summary>
            <pattern>text</pattern>
          </ele>
        </ele>
      </ele>
    </response>
    <example>
      <summary>Get all agents</summary>
      <request>
        <get_agents></get_agents>
      </request>
      <response>
        <get_agents_response status="200" status_text="OK">
          <agent id="c33864a9-d3fd-44b3-8717-972bfb01dfcf">
            <name>Custom Scan Agent</name>
            <comment>Custom agent for use on the Web servers.</comment>
            <in_use>1</in_use>
            <installer><trust>yes</trust></installer>
          </agent>
          <truncated>...</truncated>
        </get_agents_response>
      </response>
    </example>
    <example>
      <summary>Get one agent</summary>
      <request>
        <get_agents agent_id="c33864a9-d3fd-44b3-8717-972bfb01dfcf">
        </get_agents>
      </request>
      <response>
        <get_agents_response status="200" status_text="OK">
          <agent id="c33864a9-d3fd-44b3-8717-972bfb01dfcf">
            <name>Custom Scan Agent</name>
            <comment>Custom agent for use on the Web servers.</comment>
            <in_use>1</in_use>
            <installer><trust>yes</trust></installer>
          </agent>
        </get_agents_response>
      </response>
    </example>
    <example>
      <summary>Get one agent, including the installer package</summary>
      <request>
        <get_agents agent_id="c33864a9-d3fd-44b3-8717-972bfb01dfcf"
                    format="installer">
        </get_agents>
      </request>
      <response>
        <get_agents_response status="200" status_text="OK">
          <agent id="c33864a9-d3fd-44b3-8717-972bfb01dfcf">
            <name>Custom Scan Agent</name>
            <comment>Custom agent for use on the Web servers.</comment>
            <in_use>1</in_use>
            <package format="installer">
              <filename>agent.deb</filename>
              CgoKCgoKCgoKCgoKCSAgI...
            </package>
          </agent>
        </get_agents_response>
      </response>
    </example>
  </command>
  <command>
    <name>get_configs</name>
    <summary>Get all configs</summary>
    <description>
      The client uses the get_configs command to get config information.
      If the command sent by the client was valid, the manager will
      reply with a list of configs to the client.
    </description>
    <pattern>
      <attrib>
        <name>config_id</name>
        <summary>ID of single config to get</summary>
        <type>uuid</type>
      </attrib>
      <attrib>
        <name>families</name>
        <type>boolean</type>
      </attrib>
      <attrib>
        <name>preferences</name>
        <type>boolean</type>
      </attrib>
      <attrib>
        <name>sort_order</name>
        <type>sort_order</type>
      </attrib>
      <attrib>
        <name>sort_field</name>
        <type>text</type>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <any><e>config</e></any>
      </pattern>
      <ele>
        <name>config</name>
        <pattern>
          <e>name</e>
          <e>comment</e>
          <e>family_count</e>
          <e>nvt_count</e>
          <e>in_use</e>
          <e>tasks</e>
          <o><e>families</e></o>
          <o><e>preferences</e></o>
        </pattern>
        <ele>
          <name>name</name>
          <summary>The name of the config</summary>
          <pattern><t>name</t></pattern>
        </ele>
        <ele>
          <name>comment</name>
          <summary>The comment on the config</summary>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>family_count</name>
          <summary>The number of families selected by the config</summary>
          <pattern>
            integer
            <e>growing</e>
          </pattern>
          <ele>
            <name>growing</name>
            <summary>
              Whether new families are automatically added to the
              config
            </summary>
            <pattern><t>boolean</t></pattern>
          </ele>
        </ele>
        <ele>
          <name>nvt_count</name>
          <summary>The number of NVTs selected by the config</summary>
          <pattern>
            integer
            <e>growing</e>
          </pattern>
          <ele>
            <name>growing</name>
            <summary>
              Whether new NVTs are automatically added to the config
            </summary>
            <pattern><t>boolean</t></pattern>
          </ele>
        </ele>
        <ele>
          <name>in_use</name>
          <summary>Whether any tasks are using the config</summary>
          <pattern><t>boolean</t></pattern>
        </ele>
        <ele>
          <name>tasks</name>
          <summary>All tasks using the config</summary>
          <pattern>
            <any><e>task</e></any>
          </pattern>
          <ele>
            <name>task</name>
            <pattern>
              <attrib>
                <name>id</name>
                <type>uuid</type>
                <required>1</required>
              </attrib>
              <e>name</e>
            </pattern>
            <ele>
              <name>name</name>
              <summary>The name of the task</summary>
              <pattern><t>name</t></pattern>
            </ele>
          </ele>
        </ele>
        <ele>
          <name>families</name>
          <summary>All families selected by the config</summary>
          <pattern>
            <any><e>family</e></any>
          </pattern>
          <ele>
            <name>family</name>
            <pattern>
              <e>name</e>
              <e>nvt_count</e>
              <e>max_nvt_count</e>
              <e>growing</e>
            </pattern>
            <ele>
              <name>name</name>
              <summary>The name of the family</summary>
              <pattern><t>name</t></pattern>
            </ele>
            <ele>
              <name>nvt_count</name>
              <summary>The number of NVTs selected in the family</summary>
              <pattern><t>integer</t></pattern>
            </ele>
            <ele>
              <name>max_nvt_count</name>
              <summary>The total number of NVTs in the family</summary>
              <pattern><t>integer</t></pattern>
            </ele>
            <ele>
              <name>growing</name>
              <summary>
                Whether new NVTs in the family are automatically added to the selection
              </summary>
              <pattern><t>boolean</t></pattern>
            </ele>
          </ele>
        </ele>
        <ele>
          <name>preferences</name>
          <summary>Preferences for all NVTs selected by the config</summary>
          <pattern>
            <any><e>preference</e></any>
          </pattern>
          <ele>
            <name>preference</name>
            <pattern>
              <e>nvt</e>
              <e>name</e>
              <e>type</e>
              <e>value</e>
            </pattern>
            <ele>
              <name>nvt</name>
              <summary>NVT to which preference applies</summary>
              <pattern>
                <attrib>
                  <name>oid</name>
                  <type>oid</type>
                  <required>1</required>
                </attrib>
                <e>name</e>
              </pattern>
              <ele>
                <name>name</name>
                <summary>The name of the NVT</summary>
                <pattern><t>name</t></pattern>
              </ele>
            </ele>
            <ele>
              <name>name</name>
              <summary>The name of the preference</summary>
              <pattern><t>name</t></pattern>
            </ele>
            <ele>
              <name>type</name>
              <summary>The type of preference</summary>
              <pattern>text</pattern>
            </ele>
            <ele>
              <name>value</name>
              <summary>The value of the preference</summary>
              <pattern>text</pattern>
            </ele>
          </ele>
        </ele>
      </ele>
    </response>
    <example>
      <summary>Get all configs</summary>
      <request>
        <get_configs></get_configs>
      </request>
      <response>
        <get_configs_response status="200" status_text="OK">
          <config id="daba56c8-73ec-11df-a475-002264764cea">
            <name>Full and fast</name>
            <comment>All NVT's; optimized by using previously collected information.</comment>
            <family_count>
              4
              <growing>1</growing>
            </family_count>
            <nvt_count>
              12
              <growing>1</growing>
            </nvt_count>
            <in_use>1</in_use>
            <tasks>
              <task id="13bb418a-4220-4575-b35b-ec398bff7417">
                <name>Web Servers</name>
              </task>
              <truncated>...</truncated>
            </tasks>
          </config>
          <truncated>...</truncated>
        </get_configs_response>
      </response>
    </example>
    <example>
      <summary>Get a single config, including preference and family lists</summary>
      <request>
        <get_configs config_id="daba56c8-73ec-11df-a475-002264764cea" preferences="1" families="1">
        </get_configs>
      </request>
      <response>
        <get_configs_response status="200" status_text="OK">
          <config id="daba56c8-73ec-11df-a475-002264764cea">
            <name>Full and fast</name>
            <comment>All NVT's; optimized by using previously collected information.</comment>
            <family_count>
              4
              <growing>1</growing>
            </family_count>
            <nvt_count>
              12
              <growing>1</growing>
            </nvt_count>
            <in_use>1</in_use>
            <tasks>
              <task id="13bb418a-4220-4575-b35b-ec398bff7417">
                <name>Web Servers</name>
              </task>
              <truncated>...</truncated>
            </tasks>
            <families>
              <family>
                <name>Credentials</name>
                <nvt_count>8</nvt_count>
                <max_nvt_count>8</max_nvt_count>
                <growing>1</growing>
              </family>
              <truncated>...</truncated>
            </families>
            <preferences>
              <preference>
                <nvt oid="1.3.6.1.4.1.25623.1.0.10330">
                  <name>Services</name>
                </nvt>
                <name>Network connection timeout :</name>
                <type>entry</type>
                <value>5</value>
              </preference>
              <truncated>...</truncated>
            </preferences>
          </config>
          <truncated>...</truncated>
        </get_configs_response>
      </response>
    </example>
  </command>
  <command>
    <name>get_dependencies</name>
    <summary>Get dependencies for all available NVTs</summary>
    <description>
      The client uses the get_dependencies command to request the
      dependencies for one or all NVTs available through this manager.
    </description>
    <pattern>
      <attrib>
        <name>nvt_oid</name>
        <summary>ID of single NVT for which to get dependencies</summary>
        <type>oid</type>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <any><e>nvt</e></any>
      </pattern>
      <ele>
        <name>nvt</name>
        <pattern>
          <attrib>
            <name>oid</name>
            <type>oid</type>
            <required>1</required>
          </attrib>
          <e>name</e>
          <e>requires</e>
        </pattern>
        <ele>
          <name>name</name>
          <summary>The name of the NVT</summary>
          <pattern><t>name</t></pattern>
        </ele>
        <ele>
          <name>requires</name>
          <pattern>
            <any><e>nvt</e></any>
          </pattern>
          <ele>
            <name>nvt</name>
            <pattern>
              <attrib>
                <name>oid</name>
                <type>oid</type>
                <required>1</required>
              </attrib>
              <e>name</e>
            </pattern>
            <ele>
              <name>name</name>
              <summary>The name of the NVT</summary>
              <pattern><t>name</t></pattern>
            </ele>
          </ele>
        </ele>
      </ele>
    </response>
    <example>
      <summary>Get dependencies for all NVTs</summary>
      <request>
        <get_dependencies></get_dependencies>
      </request>
      <response>
        <get_dependencies_response status="200" status_text="OK">
          <nvt oid="1.3.6.1.4.1.25623.1.0.114664">
            <name>Dependency Test</name>
            <requires>
              <nvt oid="1.3.6.1.4.1.25623.1.0.114663">
                <name>File Upload Test</name>
              </nvt>
            </requires>
          </nvt>
          <truncated>...</truncated>
        </get_dependencies_response>
      </response>
    </example>
    <example>
      <summary>Get dependencies for a single NVT</summary>
      <request>
        <get_dependencies nvt_oid="1.3.6.1.4.1.25623.1.0.114664">
        </get_dependencies>
      </request>
      <response>
        <get_dependencies_response status="200" status_text="OK">
          <nvt oid="1.3.6.1.4.1.25623.1.0.114664">
            <name>Dependency Test</name>
            <requires>
              <nvt oid="1.3.6.1.4.1.25623.1.0.114663">
                <name>File Upload Test</name>
              </nvt>
            </requires>
          </nvt>
        </get_dependencies_response>
      </response>
    </example>
  </command>
  <command>
    <name>get_escalators</name>
    <summary>Get all escalators</summary>
    <description>
      The client uses the get_escalators command to get escalator information.
      If the command sent by the client was valid, the manager will
      reply with a list of escalators to the client.
    </description>
    <pattern>
      <attrib>
        <name>escalator_id</name>
        <summary>ID of single escalator to get</summary>
        <type>uuid</type>
      </attrib>
      <attrib>
        <name>sort_order</name>
        <type>sort_order</type>
      </attrib>
      <attrib>
        <name>sort_field</name>
        <type>text</type>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <any><e>escalator</e></any>
      </pattern>
      <ele>
        <name>escalator</name>
        <pattern>
          <e>name</e>
          <e>comment</e>
          <e>in_use</e>
          <e>condition</e>
          <e>event</e>
          <e>method</e>
        </pattern>
        <ele>
          <name>name</name>
          <summary>The name of the escalator</summary>
          <pattern><t>name</t></pattern>
        </ele>
        <ele>
          <name>comment</name>
          <summary>The comment on the escalator</summary>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>in_use</name>
          <summary>Whether any tasks are using the escalator</summary>
          <pattern><t>boolean</t></pattern>
        </ele>
        <ele>
          <name>condition</name>
          <summary>The condition that must be satisfied for escalation</summary>
          <pattern>
            text
            <any><e>data</e></any>
          </pattern>
          <ele>
            <name>data</name>
            <summary>Some data that defines the condition</summary>
            <pattern>
              text
              <e>name</e>
            </pattern>
            <ele>
              <name>name</name>
              <summary>The name of the condition data</summary>
              <pattern>
                text
              </pattern>
            </ele>
          </ele>
        </ele>
        <ele>
          <name>event</name>
          <summary>The event that must happen for escalation</summary>
          <pattern>
            text
            <any><e>data</e></any>
          </pattern>
          <ele>
            <name>data</name>
            <summary>Some data that defines the event</summary>
            <pattern>
              text
              <e>name</e>
            </pattern>
            <ele>
              <name>name</name>
              <summary>The name of the event data</summary>
              <pattern>
                text
              </pattern>
            </ele>
          </ele>
        </ele>
        <ele>
          <name>method</name>
          <summary>The method by which escalation must occur</summary>
          <pattern>
            text
            <any><e>data</e></any>
          </pattern>
          <ele>
            <name>data</name>
            <summary>Some data that defines the method</summary>
            <pattern>
              text
              <e>name</e>
            </pattern>
            <ele>
              <name>name</name>
              <summary>The name of the method data</summary>
              <pattern>
                text
              </pattern>
            </ele>
          </ele>
        </ele>
      </ele>
    </response>
    <example>
      <summary>Get the escalators</summary>
      <request>
        <get_escalators></get_escalators>
      </request>
      <response>
        <get_escalators_response status="200" status_text="OK">
          <escalator id="6181e65d-8ba0-4937-9c44-8f2b10b0def7">
            <name>Team alert</name>
            <comment></comment>
            <in_use>1</in_use>
            <condition>
              Threat level at least
              <data>
                <name>level</name>
                High
              </data>
            </condition>
            <event>
              Task run status changed
              <data>
                <name>status</name>
                Done
              </data>
            </event>
            <method>
              Email
              <data>
                <name>to_address</name>
                team@example.org
              </data>
              <data>
                <name>from_address</name>
                admin@example.org
              </data>
              <data>
                <name>notice</name>
                0
              </data>
            </method>
          </escalator>
          <truncated>...</truncated>
        </get_escalators_response>
      </response>
    </example>
  </command>
  <command>
    <name>get_lsc_credentials</name>
    <summary>Get all LSC credentials</summary>
    <description>
      The client uses the get_lsc_credentials command to get LSC credential information.
      If the command sent by the client was valid, the manager will
      reply with a list of LSC credentials to the client.
    </description>
    <pattern>
      <attrib>
        <name>lsc_credential_id</name>
        <summary>ID of single LSC credential to get</summary>
        <type>uuid</type>
      </attrib>
      <attrib>
        <name>format</name>
        <type>
          <alts>
            <alt>key</alt>
            <alt>rpm</alt>
            <alt>deb</alt>
            <alt>exe</alt>
          </alts>
        </type>
      </attrib>
      <attrib>
        <name>sort_order</name>
        <type>sort_order</type>
      </attrib>
      <attrib>
        <name>sort_field</name>
        <type>text</type>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <any><e>lsc_credential</e></any>
      </pattern>
      <ele>
        <name>lsc_credential</name>
        <pattern>
          <attrib>
            <name>id</name>
            <type>uuid</type>
            <required>1</required>
          </attrib>
          <e>name</e>
          <e>login</e>
          <e>comment</e>
          <e>in_use</e>
          <e>type</e>
          <e>targets</e>
          <o><e>public_key</e></o>
          <o><e>package</e></o>
        </pattern>
        <ele>
          <name>name</name>
          <summary>The name of the LSC credential</summary>
          <pattern><t>name</t></pattern>
        </ele>
        <ele>
          <name>login</name>
          <summary>The username of the LSC credential</summary>
          <pattern><t>name</t></pattern>
        </ele>
        <ele>
          <name>comment</name>
          <summary>The comment on the LSC credential</summary>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>in_use</name>
          <summary>Whether any targets are using the LSC credential</summary>
          <pattern><t>boolean</t></pattern>
        </ele>
        <ele>
          <name>type</name>
          <summary>The type of the LSC credential</summary>
          <pattern>
            <t>
              <alts>
                <alt>gen</alt>
                <alt>pass</alt>
              </alts>
            </t>
          </pattern>
        </ele>
        <ele>
          <name>targets</name>
          <summary>All targets using this LSC credential</summary>
          <pattern>
            <any><e>target</e></any>
          </pattern>
          <ele>
            <name>target</name>
            <pattern>
              <attrib>
                <name>id</name>
                <type>uuid</type>
                <required>1</required>
              </attrib>
              <e>name</e>
            </pattern>
            <ele>
              <name>name</name>
              <summary>The name of the target</summary>
              <pattern><t>name</t></pattern>
            </ele>
          </ele>
        </ele>
        <ele>
          <name>public_key</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>package</name>
          <pattern>
            <attrib>
              <name>format</name>
              <type>
                <alts>
                  <alt>rpm</alt>
                  <alt>deb</alt>
                  <alt>exe</alt>
                </alts>
              </type>
              <required>1</required>
            </attrib>
            base64
          </pattern>
        </ele>
      </ele>
    </response>
    <example>
      <summary>Get all the LSC credentials</summary>
      <request>
        <get_lsc_credentials></get_lsc_credentials>
      </request>
      <response>
        <get_lsc_credentials_response status="200" status_text="OK">
          <lsc_credential id="c33864a9-d3fd-44b3-8717-972bfb01dfcf">
            <name>sally</name>
            <login>sally</login>
            <comment></comment>
            <in_use>0</in_use>
            <type>gen</type>
            <targets></targets>
          </lsc_credential>
          <lsc_credential id="8e305b0b-260d-450d-91a8-dadf0b144e15">
            <name>bob</name>
            <login>bob</login>
            <comment>Bob on the web server.</comment>
            <in_use>1</in_use>
            <type>pass</type>
            <targets>
              <target id="1f28d970-17ef-4c69-ba8a-13827059f2b9">
                <name>Web server</name>
              </target>
            </targets>
          </lsc_credential>
          <truncated>...</truncated>
        </get_lsc_credentials_response>
      </response>
    </example>
    <example>
      <summary>Get the public key of a single LSC credential</summary>
      <request>
        <get_lsc_credentials
          lsc_credential_id="8e305b0b-260d-450d-91a8-dadf0b144e15"
          format="key">
        </get_lsc_credentials>
      </request>
      <response>
        <get_lsc_credentials_response status="200" status_text="OK">
          <lsc_credential id="8e305b0b-260d-450d-91a8-dadf0b144e15">
            <name>bob</name>
            <login>bob</login>
            <comment>Bob on the web server.</comment>
            <in_use>1</in_use>
            <type>pass</type>
            <targets>
              <target id="1f28d970-17ef-4c69-ba8a-13827059f2b9">
                <name>Web server</name>
              </target>
            </targets>
            <public_key>
              ssh-rsa AAAAB3...Z64IcQ== Key generated by OpenVAS Manager
            </public_key>
          </lsc_credential>
        </get_lsc_credentials_response>
      </response>
    </example>
    <example>
      <summary>Get the Debian package of a single LSC credential</summary>
      <request>
        <get_lsc_credentials
          lsc_credential_id="8e305b0b-260d-450d-91a8-dadf0b144e15"
          format="deb">
        </get_lsc_credentials>
      </request>
      <response>
        <get_lsc_credentials_response status="200" status_text="OK">
          <lsc_credential id="8e305b0b-260d-450d-91a8-dadf0b144e15">
            <name>bob</name>
            <login>bob</login>
            <comment>Bob on the web server.</comment>
            <in_use>1</in_use>
            <type>pass</type>
            <targets>
              <target id="1f28d970-17ef-4c69-ba8a-13827059f2b9">
                <name>Web server</name>
              </target>
            </targets>
            <package format="deb">ITxhcmNoPgpk...DmvF0AKAAACg==</package>
          </lsc_credential>
        </get_lsc_credentials_response>
      </response>
    </example>
  </command>
  <command>
    <name>get_notes</name>
    <summary>Get all notes</summary>
    <description>
      The client uses the get_notes command to get note information.
      If the command sent by the client was valid, the manager will
      reply with a list of notes to the client.
    </description>
    <pattern>
      <attrib>
        <name>note_id</name>
        <summary>ID of single note to get</summary>
        <type>uuid</type>
      </attrib>
      <attrib>
        <name>nvt_oid</name>
        <type>oid</type>
      </attrib>
      <attrib>
        <name>task_id</name>
        <type>uuid</type>
      </attrib>
      <attrib>
        <name>details</name>
        <type>boolean</type>
      </attrib>
      <attrib>
        <name>result</name>
        <type>boolean</type>
      </attrib>
      <attrib>
        <name>sort_order</name>
        <type>sort_order</type>
      </attrib>
      <attrib>
        <name>sort_field</name>
        <type>text</type>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <any><e>note</e></any>
      </pattern>
      <ele>
        <name>note</name>
        <pattern>
          <e>nvt</e>
          <e>text</e>
          <e>orphan</e>
          <o>
            <g>
              <e>creation_time</e>
              <e>modification_time</e>
              <e>hosts</e>
              <e>port</e>
              <e>threat</e>
              <e>task</e>
              <o><e>result</e></o>
            </g>
          </o>
        </pattern>
        <ele>
          <name>nvt</name>
          <pattern>
            <attrib>
              <name>oid</name>
              <type>oid</type>
              <required>1</required>
            </attrib>
            <e>name</e>
          </pattern>
          <ele>
            <name>name</name>
            <pattern><t>name</t></pattern>
          </ele>
        </ele>
        <ele>
          <name>text</name>
          <summary>The text of the note</summary>
          <pattern>
            <attrib>
              <name>excerpt</name>
              <name>Whether the contents is an excerpt of the full text</name>
              <type>boolean</type>
              <required>1</required>
            </attrib>
            text
          </pattern>
        </ele>
        <ele>
          <name>orphan</name>
          <summary>Whether the note is an orphan</summary>
          <pattern>boolean</pattern>
        </ele>
        <ele>
          <name>creation_time</name>
          <pattern><t>ctime</t></pattern>
        </ele>
        <ele>
          <name>modification_time</name>
          <pattern><t>ctime</t></pattern>
        </ele>
        <ele>
          <name>hosts</name>
          <summary>A textual list of hosts</summary>
          <pattern>
            text
          </pattern>
        </ele>
        <ele>
          <name>port</name>
          <summary>Port to which note applies</summary>
          <pattern>
            text
          </pattern>
        </ele>
        <ele>
          <name>threat</name>
          <summary>Threat level to which note applies</summary>
          <pattern>
            <t>threat</t>
          </pattern>
        </ele>
        <ele>
          <name>task</name>
          <summary>Task to which note applies</summary>
          <pattern>
            <attrib>
              <name>id</name>
              <type>uuid</type>
              <required>1</required>
            </attrib>
          </pattern>
        </ele>
        <ele>
          <name>result</name>
          <summary>Result to which note applies</summary>
          <pattern>
            <attrib>
              <name>id</name>
              <type>uuid</type>
              <required>1</required>
            </attrib>
            <e>subnet</e>
            <e>host</e>
            <e>port</e>
            <e>nvt</e>
            <e>threat</e>
            <e>description</e>
          </pattern>
          <ele>
            <name>subnet</name>
            <pattern>text</pattern>
          </ele>
          <ele>
            <name>host</name>
            <pattern>text</pattern>
          </ele>
          <ele>
            <name>port</name>
            <pattern>text</pattern>
          </ele>
          <ele>
            <name>nvt</name>
            <pattern>
              <attrib>
                <name>oid</name>
                <type>oid</type>
                <required>1</required>
              </attrib>
              <e>name</e>
              <e>cvss_base</e>
              <e>risk_factor</e>
            </pattern>
            <ele>
              <name>name</name>
              <pattern><t>name</t></pattern>
            </ele>
            <ele>
              <name>cvss_base</name>
              <pattern>text</pattern>
            </ele>
            <ele>
              <name>risk_factor</name>
              <pattern>text</pattern>
            </ele>
          </ele>
          <ele>
            <name>threat</name>
            <pattern>
              <t>threat</t>
            </pattern>
          </ele>
          <ele>
            <name>description</name>
            <pattern>text</pattern>
          </ele>
        </ele>
      </ele>
    </response>
    <example>
      <summary>Get all notes</summary>
      <request>
        <get_notes></get_notes>
      </request>
      <response>
        <get_notes_response status="200" status_text="OK">
          <note id="b76b81a7-9df8-42df-afff-baa9d4620128">
            <nvt oid="1.3.6.1.4.1.25623.1.0.75">
              <name>Test NVT: long lines</name>
            </nvt>
            <text excerpt="0">This is the full text of the note.</text>
            <orphan>1</orphan>
          </note>
          <truncated>...</truncated>
        </get_notes_response>
      </response>
    </example>
    <example>
      <summary>Get details of a single note</summary>
      <request>
        <get_notes note_id="7f618bbb-4664-419e-9bbf-367d93954cb0" details="1" result="1">
        </get_notes>
      </request>
      <response>
        <get_notes_response status="200" status_text="OK">
          <note id="7f618bbb-4664-419e-9bbf-367d93954cb0">
            <nvt oid="1.3.6.1.4.1.25623.1.0.77">
              <name>Test NVT: control chars in report result</name>
            </nvt>
            <creation_time>Sun Jun 27 08:49:46 2010</creation_time>
            <modification_time>Sun Jun 27 08:49:46 2010</modification_time>
            <text>note fixed to result</text>
            <hosts>127.0.0.1</hosts>
            <port>general/tcp</port>
            <threat>Medium</threat>
            <task id="40b236a9-2b0f-4813-b8c7-bc2b98d9d7e4">
              <name>test</name>
            </task>
            <orphan>0</orphan>
            <result id="0c95e6b3-1100-4dfd-88f1-4bed1fad29de">
              <subnet>127.0.0.1</subnet>
              <host>127.0.0.1</host>
              <port>general/tcp</port>
              <nvt oid="1.3.6.1.4.1.25623.1.0.77">
                <name>Test NVT: control chars in report result</name>
                <cvss_base></cvss_base>
                <risk_factor></risk_factor>
              </nvt>
              <threat>Medium</threat>
              <description>Warning with control char between fullstops: . .</description>
            </result>
          </note>
          <truncated>...</truncated>
        </get_notes_response>
      </response>
    </example>
  </command>
  <command>
    <name>get_nvts</name>
    <summary>Get all NVTs</summary>
    <description>
      <p>
        The client uses the get_nvts command to get NVT information.
      </p>
      <!-- TODO The RNC should specify that some flags require others. -->
      <p>
        This command may always include a details flag, a config, a sort
        order and a sort field.  If the command includes a details flag, the
        manager also consults the timeout, preference_count and preferences
        flags.  The timeout and preferences flags require a config.
      </p>
      <p>
        The NVT OID, family name and config attributes limit the listing to
        a single NVT or all NVTs in a particular family and/or config.
      </p>
      <p>
        If the details flag is present the manager will send full details
        of the NVT, otherwise it will send just the NVT name and checksum.
      </p>
      <p>
        With the preferences flag the manager includes in the listing, the
        values of each listed NVT's preferences for the given config.  The
        timeout flag does the same for the special timeout preference.
      </p>
      <p>
        If the manager possesses an NVT collection, it will reply with the
        NVT information.  If the manager cannot access a list of available
        NVTs at that time, it will reply with the 503 response.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>nvt_oid</name>
        <summary>Single NVT to get</summary>
        <type>oid</type>
        <required>1</required>
      </attrib>
      <attrib>
        <name>details</name>
        <summary>Whether to include full details</summary>
        <type>boolean</type>
      </attrib>
      <attrib>
        <name>preferences</name>
        <summary>Whether to include preference</summary>
        <type>boolean</type>
      </attrib>
      <attrib>
        <name>preference_count</name>
        <summary>Whether to include preference count</summary>
        <type>boolean</type>
      </attrib>
      <attrib>
        <name>timeout</name>
        <summary>Whether to include the special timeout preference</summary>
        <type>boolean</type>
      </attrib>
      <attrib>
        <name>config_id</name>
        <summary>ID of config to which to limit the NVT listing</summary>
        <type>uuid</type>
      </attrib>
      <attrib>
        <name>family</name>
        <summary>Family to which to limit NVT listing</summary>
        <type>text</type>
      </attrib>
      <attrib>
        <name>sort_order</name>
        <type>sort_order</type>
      </attrib>
      <attrib>
        <name>sort_field</name>
        <type>text</type>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <e>nvt</e>
      </pattern>
      <ele>
        <name>nvt</name>
        <pattern>
          <attrib>
            <name>id</name>
            <type>uuid</type>
            <required>1</required>
          </attrib>
          <e>name</e>
          <e>checksum</e>
          <o>
            <g>
              <e>category</e>
              <e>copyright</e>
              <e>description</e>
              <e>summary</e>
              <e>family</e>
              <e>version</e>
              <e>cvss_base</e>
              <e>risk_factor</e>
              <e>cve_id</e>
              <e>bugtraq_id</e>
              <e>xrefs</e>
              <e>fingerprints</e>
              <e>tags</e>
              <o><e>preference_count</e></o>
              <o><e>timeout</e></o>
              <o><e>preferences</e></o>
            </g>
          </o>
        </pattern>
        <ele>
          <name>name</name>
          <summary>The name of the NVT</summary>
          <pattern><t>name</t></pattern>
        </ele>
        <ele>
          <name>category</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>copyright</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>description</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>summary</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>family</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>version</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>cvss_base</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>risk_factor</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>cve_id</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>bugtraq_id</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>xrefs</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>fingerprints</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>tags</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>preference_count</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>timeout</name>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>checksum</name>
          <pattern>
            <e>algorithm</e>
            text
          </pattern>
          <ele>
            <name>algorithm</name>
            <pattern>text</pattern>
          </ele>
        </ele>
        <ele>
          <name>preferences</name>
          <pattern>
            <e>timeout</e>
            <any><e>preference</e></any>
            text
          </pattern>
          <ele>
            <name>timeout</name>
            <pattern>text</pattern>
          </ele>
          <ele>
            <name>preference</name>
            <pattern>
              <e>nvt</e>
              <e>name</e>
              <e>type</e>
              <e>value</e>
            </pattern>
            <ele>
              <name>nvt</name>
              <pattern><t>oid</t></pattern>
            </ele>
            <ele>
              <name>name</name>
              <pattern>text</pattern>
            </ele>
            <ele>
              <name>type</name>
              <pattern>text</pattern>
            </ele>
            <ele>
              <name>value</name>
              <pattern>text</pattern>
            </ele>
          </ele>
        </ele>
      </ele>
    </response>
    <example>
      <summary>Get full NVT listing</summary>
      <request>
        <get_nvts details="1" timeout="1" preference_count="1" preferences="1">
        </get_nvts>
      </request>
      <response>
        <get_nvts_response status="200" status_text="OK">
          <nvt oid="1.3.6.1.4.1.25623.1.7.13005">
            <name>Services</name>
            <category>Services</category>
            <copyright>GNU GPL v2</copyright>
            <description>This script attepts to detects with service is running on which port.</description>
            <summary>Find what is listening on which port</summary>
            <family>Service detection</family>
            <version>$Revision: 1852 $</version>
            <cvss_base></cvss_base>
            <risk_factor>None</risk_factor>
            <cve_id>NOCVE</cve_id>
            <bugtraq_id>NOBID</bugtraq_id>
            <xrefs>NOXREF</xrefs>
            <fingerprints>NOSIGNKEYS</fingerprints>
            <tags>NOTAG</tags>
            <preference_count>-1</preference_count>
            <timeout></timeout>
            <checksum>
              <algorithm>md5</algorithm>
              2397586ea5cd3a69f953836f7be9ef7b
            </checksum>
            <preferences>
              <timeout></timeout>
              <preference>
                <nvt oid="1.3.6.1.4.1.25623.1.0.10330">
                  <name>Services</name>
                </nvt>
                <name>Network connection timeout :</name>
                <type>entry</type>
                <value>5</value>
              </preference>
              <truncated>...</truncated>
            </preferences>
          </nvt>
          <nvt oid="1.3.6.1.4.1.25623.1.7.13006">
            <name>FooBar 21</name>
            <category>Services</category>
            <copyright>GNU GPL v2</copyright>
            <description>This script detects whether the FooBar 2.1 XSS vulnerability is present.</description>
            <truncated>...</truncated>
          </nvt>
          <truncated>...</truncated>
        </get_nvts_response>
      </response>
    </example>
    <example>
      <summary>Get minimal information about one NVT</summary>
      <request>
        <get_nvts nvt_oid="1.3.6.1.4.1.25623.1.0.10330">
        </get_nvts>
      </request>
      <response>
        <get_nvts_response status="200" status_text="OK">
          <nvt oid="1.3.6.1.4.1.25623.1.0.10330">
            <name>Services</name>
            <checksum>
              <algorithm>md5</algorithm>
              2397586ea5cd3a69f953836f7be9ef7b
            </checksum>
          </nvt>
        </get_nvts_response>
      </response>
    </example>
  </command>
  <command>
    <name>get_nvt_families</name>
    <summary>Get a list of all NVT families</summary>
    <description>
      <p>
        The client uses the get_nvt_families command to get NVT family
        information.  If the command sent by the client was valid, the
        manager will reply with a list of NVT families to the client.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>sort_order</name>
        <type>sort_order</type>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <e>families</e>
      </pattern>
      <ele>
        <name>families</name>
        <pattern><any><e>family</e></any></pattern>
        <ele>
          <name>family</name>
          <pattern>
            <e>name</e>
            <e>max_nvt_count</e>
          </pattern>
          <ele>
            <name>name</name>
            <summary>The name of the family</summary>
            <pattern><t>name</t></pattern>
          </ele>
          <ele>
            <name>max_nvt_count</name>
            <summary>The number of NVTs in the family</summary>
            <pattern><t>integer</t></pattern>
          </ele>
        </ele>
      </ele>
    </response>
    <example>
      <summary>Get the NVT families</summary>
      <request>
        <get_nvt_families></get_nvt_families>
      </request>
      <response>
        <get_nvt_families_response status="200" status_text="OK">
          <families>
            <family>
              <name>Credentials</name>
              <max_nvt_count>8</max_nvt_count>
            </family>
            <family>
              <name>Port scanners</name>
              <max_nvt_count>12</max_nvt_count>
            </family>
            <truncated>...</truncated>
          </families>
        </get_nvt_families_response>
      </response>
    </example>
  </command>
  <command>
    <name>get_nvt_feed_checksum</name>
    <summary>Get checksum for entire NVT collection</summary>
    <description>
      <p>
        The client uses the get_nvt_feed_checksum command to request a
        checksum for the complete NVT collection available through this
        manager.  The client may specify an algorithm to be used for
        computing this checksum.
      </p>
      <p>
        If the specified algorithm is not implemented in the manager, then
        the manager will reply with a response code in the 4xx range.
      </p>
      <p>
        If the client does not specify a checksum algorithm, the manager is
        expected to use the MD5 algorithm for computing the checksum.
      </p>
      <p>
        If the manager possesses such a collection, it will reply with a
        response code indicating success, and the checksum over all NVT
        files. If the manager cannot access a list of available NVTs at
        present, it will reply with the 503 response.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>algorithm</name>
        <type>text</type>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <e>checksum</e>
      </pattern>
      <ele>
        <name>checksum</name>
        <pattern>
          <attrib>
            <name>algorithm</name>
            <type>text</type>
            <required>1</required>
          </attrib>
          <t>base64</t>
        </pattern>
      </ele>
    </response>
    <example>
      <summary>Get the NVT feed checksum</summary>
      <request>
        <get_nvt_feed_checksum></get_nvt_feed_checksum>
      </request>
      <response>
        <get_nvt_feed_checksum_response status="200" status_text="OK">
          <checksum algorithm="md5">931db829a06b9a440a2ecaeb68c03715</checksum>
        </get_nvt_feed_checksum_response>
      </response>
    </example>
  </command>
  <command>
    <name>get_overrides</name>
    <summary>Get all overrides</summary>
    <description>
      The client uses the get_overrides command to get override information.
      If the command sent by the client was valid, the manager will
      reply with a list of overrides to the client.
    </description>
    <pattern>
      <attrib>
        <name>override_id</name>
        <summary>ID of single override to get</summary>
        <type>uuid</type>
      </attrib>
      <attrib>
        <name>nvt_oid</name>
        <type>oid</type>
      </attrib>
      <attrib>
        <name>task_id</name>
        <type>uuid</type>
      </attrib>
      <attrib>
        <name>details</name>
        <type>boolean</type>
      </attrib>
      <attrib>
        <name>result</name>
        <type>boolean</type>
      </attrib>
      <attrib>
        <name>sort_order</name>
        <type>sort_order</type>
      </attrib>
      <attrib>
        <name>sort_field</name>
        <type>text</type>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <any><e>override</e></any>
      </pattern>
      <ele>
        <name>override</name>
        <pattern>
          <e>nvt</e>
          <e>text</e>
          <e>threat</e>
          <e>new_threat</e>
          <e>orphan</e>
          <o>
            <g>
              <e>creation_time</e>
              <e>modification_time</e>
              <e>hosts</e>
              <e>port</e>
              <e>task</e>
              <o><e>result</e></o>
            </g>
          </o>
        </pattern>
        <ele>
          <name>nvt</name>
          <pattern>
            <attrib>
              <name>oid</name>
              <type>oid</type>
              <required>1</required>
            </attrib>
            <e>name</e>
          </pattern>
          <ele>
            <name>name</name>
            <pattern><t>name</t></pattern>
          </ele>
        </ele>
        <ele>
          <name>text</name>
          <summary>The text of the override</summary>
          <pattern>
            <attrib>
              <name>excerpt</name>
              <name>Whether the contents is an excerpt of the full text</name>
              <type>boolean</type>
              <required>1</required>
            </attrib>
            text
          </pattern>
        </ele>
        <ele>
          <name>threat</name>
          <summary>Threat level to which override applies</summary>
          <pattern>
            <t>threat</t>
          </pattern>
        </ele>
        <ele>
          <name>new_threat</name>
          <summary>New threat for result</summary>
          <pattern>
            <t>threat</t>
          </pattern>
        </ele>
        <ele>
          <name>orphan</name>
          <summary>Whether the override is an orphan</summary>
          <pattern>boolean</pattern>
        </ele>
        <ele>
          <name>creation_time</name>
          <pattern><t>ctime</t></pattern>
        </ele>
        <ele>
          <name>modification_time</name>
          <pattern><t>ctime</t></pattern>
        </ele>
        <ele>
          <name>hosts</name>
          <summary>A textual list of hosts</summary>
          <pattern>
            text
          </pattern>
        </ele>
        <ele>
          <name>port</name>
          <summary>Port to which override applies</summary>
          <pattern>
            text
          </pattern>
        </ele>
        <ele>
          <name>task</name>
          <summary>Task to which override applies</summary>
          <pattern>
            <attrib>
              <name>id</name>
              <type>uuid</type>
              <required>1</required>
            </attrib>
          </pattern>
        </ele>
        <ele>
          <name>result</name>
          <summary>Result to which override applies</summary>
          <pattern>
            <attrib>
              <name>id</name>
              <type>uuid</type>
              <required>1</required>
            </attrib>
            <e>subnet</e>
            <e>host</e>
            <e>port</e>
            <e>nvt</e>
            <e>threat</e>
            <e>description</e>
          </pattern>
          <ele>
            <name>subnet</name>
            <pattern>text</pattern>
          </ele>
          <ele>
            <name>host</name>
            <pattern>text</pattern>
          </ele>
          <ele>
            <name>port</name>
            <pattern>text</pattern>
          </ele>
          <ele>
            <name>nvt</name>
            <pattern>
              <attrib>
                <name>oid</name>
                <type>oid</type>
                <required>1</required>
              </attrib>
              <e>name</e>
              <e>cvss_base</e>
              <e>risk_factor</e>
            </pattern>
            <ele>
              <name>name</name>
              <pattern><t>name</t></pattern>
            </ele>
            <ele>
              <name>cvss_base</name>
              <pattern>text</pattern>
            </ele>
            <ele>
              <name>risk_factor</name>
              <pattern>text</pattern>
            </ele>
          </ele>
          <ele>
            <name>threat</name>
            <pattern>
              <t>threat</t>
            </pattern>
          </ele>
          <ele>
            <name>description</name>
            <pattern>text</pattern>
          </ele>
        </ele>
      </ele>
    </response>
    <example>
      <summary>Get all overrides</summary>
      <request>
        <get_overrides></get_overrides>
      </request>
      <response>
        <get_overrides_response status="200" status_text="OK">
          <override id="b76b81a7-9df8-42df-afff-baa9d4620128">
            <nvt oid="1.3.6.1.4.1.25623.1.0.75">
              <name>Test NVT: long lines</name>
            </nvt>
            <text excerpt="0">This is the full text of the override.</text>
            <threat>High</threat>
            <new_threat>Log</new_threat>
            <orphan>1</orphan>
          </override>
          <truncated>...</truncated>
        </get_overrides_response>
      </response>
    </example>
    <example>
      <summary>Get details of a single override</summary>
      <request>
        <get_overrides override_id="7f618bbb-4664-419e-9bbf-367d93954cb0" details="1">
        </get_overrides>
      </request>
      <response>
        <get_overrides_response status="200" status_text="OK">
          <override id="7f618bbb-4664-419e-9bbf-367d93954cb0">
            <nvt oid="1.3.6.1.4.1.25623.1.0.77">
              <name>Test NVT: control chars in report result</name>
            </nvt>
            <creation_time>Sun Jun 27 08:49:46 2010</creation_time>
            <modification_time>Sun Jun 27 08:49:46 2010</modification_time>
            <text>override fixed to result</text>
            <hosts>127.0.0.1</hosts>
            <port>general/tcp</port>
            <threat>Medium</threat>
            <new_threat>Low</new_threat>
            <task id="40b236a9-2b0f-4813-b8c7-bc2b98d9d7e4">
              <name>test</name>
            </task>
            <orphan>0</orphan>
            <result id="0c95e6b3-1100-4dfd-88f1-4bed1fad29de" />
          </override>
          <truncated>...</truncated>
        </get_overrides_response>
      </response>
    </example>
  </command>
  <command>
    <name>get_preferences</name>
    <summary>Get all preferences</summary>
    <description>
      <p>
        The client uses the get_preferences command to get preference information.
        If the command sent by the client was valid, the manager will reply with
        a list of preferences to the client.  If the manager cannot access a list
        of available NVTs at present, it will reply with the 503 response.
      </p>
      <p>
        When the command includes a config_id attribute, the preference element
        includes the preference name, type and value, and the NVT to which the
        preference applies.  Otherwise, the preference element includes just the
        name and value, with the NVT and type built into the name.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>nvt_oid</name>
        <type>oid</type>
      </attrib>
      <attrib>
        <name>config_id</name>
        <summary>ID of config of which to show preference values</summary>
        <type>uuid</type>
      </attrib>
      <attrib>
        <name>preference</name>
        <summary>The name of a particular preference to get</summary>
        <type>text</type>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <any><e>preference</e></any>
      </pattern>
      <ele>
        <name>preference</name>
        <pattern>
          <o><e>nvt</e></o>
          <e>name</e>
          <o><e>type</e></o>
          <e>value</e>
        </pattern>
        <ele>
          <name>nvt</name>
          <summary>NVT to which preference applies</summary>
          <pattern>
            <attrib>
              <name>oid</name>
              <type>oid</type>
              <required>1</required>
            </attrib>
            <e>name</e>
          </pattern>
          <ele>
            <name>name</name>
            <summary>The name of the NVT</summary>
            <pattern><t>name</t></pattern>
          </ele>
        </ele>
        <ele>
          <name>name</name>
          <summary>The name of the preference</summary>
          <pattern><t>name</t></pattern>
        </ele>
        <ele>
          <name>type</name>
          <summary>The type of preference</summary>
          <pattern>text</pattern>
        </ele>
        <ele>
          <name>value</name>
          <summary>The value of the preference</summary>
          <pattern>text</pattern>
        </ele>
      </ele>
    </response>
    <example>
      <summary>Get default preferences for all NVTs</summary>
      <request>
        <get_preferences></get_preferences>
      </request>
      <response>
        <get_preferences_response status="200" status_text="OK">
          <preference>
            <name>Services[entry]:Network connection timeout :</name>
            <value>5</value>
          </preference>
          <truncated>...</truncated>
        </get_preferences_response>
      </response>
    </example>
    <example>
      <summary>Get default preferences for a single NVT</summary>
      <request>
        <get_preferences nvt_oid="1.3.6.1.4.1.25623.1.0.10330">
        </get_preferences>
      </request>
      <response>
        <get_preferences_response status="200" status_text="OK">
          <preference>
            <name>Services[entry]:Network connection timeout :</name>
            <value>5</value>
          </preference>
          <truncated>...</truncated>
        </get_preferences_response>
      </response>
    </example>
    <example>
      <summary>Get preferences from a config for all NVTs</summary>
      <request>
        <get_preferences config_id="daba56c8-73ec-11df-a475-002264764cea">
        </get_preferences>
      </request>
      <response>
        <get_preferences_response status="200" status_text="OK">
          <preference>
            <nvt oid="1.3.6.1.4.1.25623.1.0.10330">
              <name>Services</name>
            </nvt>
            <name>Network connection timeout :</name>
            <type>entry</type>
            <value>5</value>
          </preference>
          <truncated>...</truncated>
        </get_preferences_response>
      </response>
    </example>
    <example>
      <summary>Get preferences from a config for a single NVT</summary>
      <request>
        <get_preferences config_id="daba56c8-73ec-11df-a475-002264764cea"
                         nvt_oid="1.3.6.1.4.1.25623.1.0.10330">
        </get_preferences>
      </request>
      <response>
        <get_preferences nvt_oid="1.3.6.1.4.1.25623.1.0.10330">
          <preference>
            <nvt oid="1.3.6.1.4.1.25623.1.0.10330">
              <name>Services</name>
            </nvt>
            <name>Network connection timeout :</name>
            <type>entry</type>
            <value>5</value>
          </preference>
        </get_preferences>
      </response>
    </example>
  </command>
  <command>
    <name>get_version</name>
    <summary>Get the OpenVAS Manager Protocol version</summary>
    <pattern></pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <e>version</e>
      </pattern>
      <ele>
        <name>version</name>
        <pattern>text</pattern>
      </ele>
    </response>
    <example>
      <summary>Get the version</summary>
      <request>
        <get_version></get_version>
      </request>
      <response>
        <get_version_response status="200" status_text="OK">
          <version>1.0</version>
        </get_version_response>
      </response>
    </example>
  </command>
  <command>
    <name>help</name>
    <summary>Get the help text</summary>
    <pattern></pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
  </command>
  <command>
    <name>modify_config</name>
    <summary>Update an existing config</summary>
    <description>
      <p>
        This command can take three forms: with a preference, with a family selection
        or with an NVT selection.
      </p>
      <p>
        The first form modifies a preference on the config.
        If the preference includes an NVT, then the preference is an NVT preference,
        otherwise the preference is a scanner preference.  If the preference includes
        a value then the manager updates the value of the preference, otherwise the
        manager removes the preference.
      </p>

      <p>
        The second form, with a family selection, lets the client modify the
        NVTs selected by the config at a family level.  The idea is that the
        client modifies the entire family selection at once, so a client will
        often need to include many families in a family selection.
      </p>

      <p>
        The family_selection may include a growing element to indicate whether new
        families should be added to the selection.  It may also include any number
        of family elements.
      </p>

      <p>
        A family element must always include a name and may include a growing element
        and an all element.  The all element indicates whether all NVTs in the family
        should be selected.  The growing element indicates whether new NVTs in the
        family should be added to the selection as they arrive.  Leaving a family
        out of the family_selection is equivalent to including the family with all
        0 and growing 0.
      </p>

      <p>
        The effect of the all 0 and growing 0 case is subtle: if
        all NVTs were selected then all are removed (effectively removing the
        family from the config).  However if some NVTs were selected then they
        remain selected.  As a result the client must include in the
        family_selection all families that must have all NVTs selected.
      </p>

      <p>
        The third option, an NVT selection, must include a family and may include any
        number of NVTs.  The manager updates the given family in the config to
        include only the given NVTs.
      </p>

      <p>
        If there was no error with the command sent by the client, the manager will
        apply the changes to the config and will reply with a response code indicating
        success.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>config_id</name>
        <summary>ID of config to modify</summary>
        <type>uuid</type>
        <required>1</required>
      </attrib>
      <or>
        <e>preference</e>
        <e>family_selection</e>
        <e>nvt_selection</e>
      </or>
    </pattern>
    <ele>
      <name>preference</name>
      <pattern>
        <e>name</e>
        <o><e>nvt</e></o>
        <o><e>value</e></o>
      </pattern>
      <ele>
        <name>name</name>
        <summary>The name of the preference to modify</summary>
        <pattern><t>name</t></pattern>
      </ele>
      <ele>
        <name>nvt</name>
        <summary>NVT associated with preference to modify</summary>
        <description>
          If this element is present then the preference is an NVT
          preference, otherwise it is a Scanner preference.
        </description>
        <pattern>
          <attrib>
            <name>oid</name>
            <type>oid</type>
            <required>1</required>
          </attrib>
        </pattern>
      </ele>
      <ele>
        <name>value</name>
        <summary>New value for preference</summary>
        <pattern><t>base64</t></pattern>
      </ele>
    </ele>
    <ele>
      <name>family_selection</name>
      <pattern>
        <o><e>growing</e></o>
        <any><e>family</e></any>
      </pattern>
      <ele>
        <name>growing</name>
        <summary>Whether new families should be added to the config</summary>
        <pattern><t>boolean_atoi</t></pattern>
      </ele>
      <ele>
        <name>family</name>
        <pattern>
          <o><e>all</e></o>
          <o><e>growing</e></o>
          <e>name</e>
        </pattern>
        <ele>
          <name>all</name>
          <summary>Whether to select all NVTs initially</summary>
          <pattern><t>boolean_atoi</t></pattern>
        </ele>
        <ele>
          <name>growing</name>
          <summary>Whether to add newly arrived nvts to the selection</summary>
          <pattern><t>boolean_atoi</t></pattern>
        </ele>
        <ele>
          <name>name</name>
          <pattern><t>name</t></pattern>
        </ele>
      </ele>
    </ele>
    <ele>
      <name>nvt_selection</name>
      <pattern>
        <e>family</e>
        <any><e>nvt</e></any>
      </pattern>
      <ele>
        <name>family</name>
        <summary>Name of family to modify</summary>
        <pattern><t>name</t></pattern>
      </ele>
      <ele>
        <name>nvt</name>
        <pattern>
          <attrib>
            <name>oid</name>
            <type>oid</type>
            <required>1</required>
          </attrib>
        </pattern>
      </ele>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Modify a config preference</summary>
      <request>
        <modify_config config_id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
          <preference>
            <nvt oid="1.3.6.1.4.1.25623.1.0.14259"></nvt>
            <name>Nmap (NASL wrapper)[checkbox]:UDP port scan</name>
            <value>eWVz</value>
          </preference>
        </modify_config>
      </request>
      <response>
        <modify_config_response status="200" status_text="OK">
        </modify_config_response>
      </response>
    </example>
    <example>
      <summary>Modify the families that a config selects</summary>
      <description>
        <p>
          The outer "growing" element sets the config to add any new families
          that arrive.
        </p>
        <p>
          The client requests the Manager to keep a single selected
          family (Debian Local Security Checks), to select all NVTs in
          this family, and to automatically add any new NVTs in this family
          to the config.
        </p>
      </description>
      <request>
        <modify_config config_id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
          <family_selection>
            <growing>1</growing>
            <family>
              <name>Debian Local Security Checks</name>
              <all>1</all>
              <growing>1</growing>
            </family>
          </family_selection>
        </modify_config>
      </request>
      <response>
        <modify_config_response status="200" status_text="OK">
        </modify_config_response>
      </response>
    </example>
    <example>
      <summary>Modify the NVTs that a config selects in a particular family</summary>
      <request>
        <modify_config config_id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
          <nvt_selection>
            <family>Debian Local Security Checks</family>
            <nvt oid="1.3.6.1.4.1.25623.1.0.53797"></nvt>
            <nvt oid="1.3.6.1.4.1.25623.1.0.63272"></nvt>
            <nvt oid="1.3.6.1.4.1.25623.1.0.55615"></nvt>
            <nvt oid="1.3.6.1.4.1.25623.1.0.53546"></nvt>
          </nvt_selection>
        </modify_config>
      </request>
      <response>
        <modify_config_response status="200" status_text="OK">
        </modify_config_response>
      </response>
    </example>
  </command>
  <command>
    <name>modify_note</name>
    <summary>Modify an existing note</summary>
    <description>
      <p>
        The client uses the modify_note command to change an existing note.
      </p>
      <p>
        If an optional element is left out, the existing value will be
        cleared, generalising that constraint.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>note_id</name>
        <summary>ID of note to modify</summary>
        <type>uuid</type>
        <required>1</required>
      </attrib>
      <o><e>hosts</e></o>
      <o><e>port</e></o>
      <o><e>result</e></o>
      <o><e>task</e></o>
      <e>text</e>
      <o><e>threat</e></o>
    </pattern>
    <ele>
      <name>hosts</name>
      <summary>A textual list of hosts</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>port</name>
      <summary>Port to which note applies</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>text</name>
      <summary>The text of the note</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>threat</name>
      <summary>Threat level to which note applies</summary>
      <pattern>
        <t>threat</t>
      </pattern>
    </ele>
    <ele>
      <name>task</name>
      <summary>Task to which note applies</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>result</name>
      <summary>Result to which note applies</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Modify the text and result of a note</summary>
      <request>
        <modify_note note_id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
          <text>This issue should be resolved after the upgrade.</text>
          <result result_id="254cd3ef-bbe1-4d58-859d-21b8d0c046c"/>
        </modify_note>
      </request>
      <response>
        <modify_note_response status="200" status_text="OK">
        </modify_note_response>
      </response>
    </example>
  </command>
  <command>
    <name>modify_override</name>
    <summary>Modify an existing override</summary>
    <description>
      <p>
        The client uses the modify_override command to change an existing
        override.
      </p>
      <p>
        If an optional element is left out, the existing value will be
        cleared, generalising that constraint.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>override_id</name>
        <summary>ID of override to modify</summary>
        <type>uuid</type>
        <required>1</required>
      </attrib>
      <o><e>hosts</e></o>
      <o><e>new_threat</e></o>
      <o><e>port</e></o>
      <o><e>result</e></o>
      <o><e>task</e></o>
      <e>text</e>
      <o><e>threat</e></o>
    </pattern>
    <ele>
      <name>hosts</name>
      <summary>A textual list of hosts</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>new_threat</name>
      <summary>New threat level for result</summary>
      <pattern>
        <t>threat</t>
      </pattern>
    </ele>
    <ele>
      <name>port</name>
      <summary>Port to which override applies</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>text</name>
      <summary>Text describing the override</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>threat</name>
      <summary>Threat level to which override applies</summary>
      <pattern>
        <t>threat</t>
      </pattern>
    </ele>
    <ele>
      <name>task</name>
      <summary>Task to which override applies</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>result</name>
      <summary>Result to which override applies</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Set the override threat to Low</summary>
      <request>
        <modify_override override_id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
          <text>This issue is less important in our setup.</text>
          <new_threat>Low</new_threat>
        </modify_override>
      </request>
      <response>
        <modify_override_response status="200" status_text="OK">
        </modify_override_response>
      </response>
    </example>
  </command>
  <command>
    <name>modify_report</name>
    <summary>Modify an existing report</summary>
    <description>
      <p>
        The client uses the modify_report command to change an existing
        report.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>report_id</name>
        <summary>ID of report to modify</summary>
        <type>uuid</type>
        <required>1</required>
      </attrib>
      <e>comment</e>
    </pattern>
    <ele>
      <name>comment</name>
      <summary>The comment on the report</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Modify a report comment</summary>
      <request>
        <modify_report report_id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
          <comment>Monthly scan of the webserver.</comment>
        </modify_report>
      </request>
      <response>
        <modify_report_response status="200" status_text="OK">
        </modify_report_response>
      </response>
    </example>
  </command>
  <command>
    <name>modify_task</name>
    <summary>Modify an existing task</summary>
    <description>
      <p>
        The client uses the modify_task command to change an existing
        task.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>task_id</name>
        <summary>ID of task to modify</summary>
        <type>uuid</type>
        <required>1</required>
      </attrib>
      <or>
        <e>comment</e>
        <e>escalator</e>
        <e>name</e>
        <e>rcfile</e>
        <e>schedule</e>
        <e>file</e>
      </or>
    </pattern>
    <ele>
      <name>comment</name>
      <summary>The comment on the task</summary>
      <pattern>
        text
      </pattern>
    </ele>
    <ele>
      <name>escalator</name>
      <summary>Task escalator</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>name</name>
      <summary>The name of the task</summary>
      <pattern><t>name</t></pattern>
    </ele>
    <ele>
      <name>rcfile</name>
      <summary>An openvasrc style file describing the task</summary>
      <pattern>
        <t>base64</t>
      </pattern>
    </ele>
    <ele>
      <name>schedule</name>
      <summary>Task schedule</summary>
      <pattern>
        <attrib>
          <name>id</name>
          <type>uuid</type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <ele>
      <name>file</name>
      <summary>File to attach to task</summary>
      <pattern>
        <attrib>
          <name>name</name>
          <type>text</type>
          <required>1</required>
        </attrib>
        <t>base64</t>
        <attrib>
          <name>action</name>
          <type>
            <alts>
              <alt>update</alt>
              <alt>remove</alt>
            </alts>
          </type>
          <required>1</required>
        </attrib>
      </pattern>
    </ele>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Modify a task comment</summary>
      <request>
        <modify_task task_id="254cd3ef-bbe1-4d58-859d-21b8d0c046c6">
          <comment>Monthly scan of the webserver.</comment>
        </modify_task>
      </request>
      <response>
        <modify_task_response status="200" status_text="OK">
        </modify_task_response>
      </response>
    </example>
  </command>
  <command>
    <name>pause_task</name>
    <summary>Pause a running task</summary>
    <description>
      <p>
        The client uses the pause_task command to manually pause a running task.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>task_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Pause a running task</summary>
      <request>
        <pause_task task_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </pause_task>
      </request>
      <response>
        <pause_task_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>resume_or_start_task</name>
    <summary>Resume task if stopped, else start task</summary>
    <description>
      <p>
        The client uses the resume_or_start_task command to manually start
        an existing task, ensuring that the task will resume from its
        previous position if the task is in the Stopped state.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>task_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Resume a running task</summary>
      <request>
        <resume_or_start_task task_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </resume_or_start_task>
      </request>
      <response>
        <resume_or_start_task_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>resume_paused_task</name>
    <summary>Resume a paused task</summary>
    <description>
      <p>
        The client uses the resume_paused_task command to manually resume a
        paused task.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>task_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Resume a paused task</summary>
      <request>
        <resume_paused_task task_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </resume_paused_task>
      </request>
      <response>
        <resume_paused_task_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>resume_stopped_task</name>
    <summary>Resume a stopped task</summary>
    <description>
      <p>
        The client uses the resume_stopped_task command to manually resume a
        stopped task.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>task_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Resume a stopped task</summary>
      <request>
        <resume_stopped_task task_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </resume_stopped_task>
      </request>
      <response>
        <resume_stopped_task_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>start_task</name>
    <summary>Manually start an existing task</summary>
    <description>
      <p>
        The client uses the start_task command to manually start an
        existing task.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>task_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Start a task</summary>
      <request>
        <start_task task_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </start_task>
      </request>
      <response>
        <start_task_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>stop_task</name>
    <summary>Stop a running task</summary>
    <description>
      <p>
        The client uses the stop_task command to manually stop a
        running task.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>task_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Stop a running task</summary>
      <request>
        <stop_task task_id="267a3405-e84a-47da-97b2-5fa0d2e8995e">
        </stop_task>
      </request>
      <response>
        <stop_task_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
  <command>
    <name>test_escalator</name>
    <summary>Run an escalator</summary>
    <description>
      <p>
        The client uses the test_escalator command to invoke a test run of
        an escalator.
      </p>
    </description>
    <pattern>
      <attrib>
        <name>task_id</name>
        <type>uuid</type>
        <required>1</required>
      </attrib>
    </pattern>
    <response>
      <pattern>
        <attrib>
          <name>status</name>
          <type>status</type>
          <required>1</required>
        </attrib>
        <attrib>
          <name>status_text</name>
          <type>text</type>
          <required>1</required>
        </attrib>
      </pattern>
    </response>
    <example>
      <summary>Test an escalator</summary>
      <request>
        <test_escalator escalator_id="97390ade-e075-11df-9973-002264764cea">
        </test_escalator>
      </request>
      <response>
        <test_escalator_response status="200" status_text="OK"/>
      </response>
    </example>
  </command>
</protocol>
